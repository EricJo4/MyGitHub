///////////////////////////////////////////////////////////////////////////
                               Reflection
                             Workshop - #4
Full Name  : Eric Jo
Student ID#: 137057188
Email         : hjo9@myseneca.ca
Section      : NII

Authenticity Declaration:
I declare this submission is the result of my own work and has not been
shared with any other student or 3rd party content provider. This submitted
piece of work is entirely of my own creation.
///////////////////////////////////////////////////////////////////////////

1. My code consists of several repeated iterations and selections including 'if', 'while', and 'do while'. At first, I created loops to
capture only positive numbers for each input of the number of fruits. After that, I built 'if' statements nested in a 'while' loop
to request input over and over as long as the condition of the 'while' loop is true. I copied and pasted the 'while' loops 5 times
with editing the variable names for the 'picking fruits process'
One important point is the message of 'picking fruits process' doesn't show up if the input number of fruit is 0. So, I nested
the 'while' loops in an 'if' statement which condition is input number must be greater than 0.
At last, I nested whole statements in 'do while' which loops them until the user inputs 0 to shoppingAgain variable.

2. I can say it would be a disaster if nesting doesn't exist in programming. If 'if(numberOfApples >0)' couldn't nest
while(pickedApples != numOfApples), I would've displayed all 'picking fruits process' even with some fruits not selected.
I really appreciate the presence of 'do while'. Without 'do while' nesting, I could've copied and pasted the entire loops for
several times when another shopping needed.

3. Repeated 'if' statements without 'else if' or 'else' is inefficient for validating the entered values.
In "if/else if...' path logic, only one value between 1 and 5 would be input since one statement is satisfied, and the other statements
would be ignored.
In repeated 'if' statements, the compiler considers and executes all 'if' statements so, more than one value can be entered, which
means more processing time and inaccurate results.