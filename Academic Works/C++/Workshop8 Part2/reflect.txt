Name: Eric Jo
Student number: 137057188
Email: hjo9@myseneca.ca
Completion date: July 24 2023
I have done all the coding by myself and only copied the code that 
my professor provided to complete my workshops and assignments.
---------------------------------------------------------------------------------------
I have learned concepts of inheritance, virtual functions, abstract base classes,
and pure virtual functions in this workshop.
Pure virtual functions are declared in a base class but not implemented and give
placeholders that will be overridden in derived classes. This concept is helpful
in terms of reusability because the pure virtual functions define an interface for other 
related classes.
Abstract base class is a class that has pure virtual functions. In this workshop, class Shape
was the one. The class provides interfaces for derived classes when an object is created. This 
concept is good in terms of consistent structure among different classes that inherit from
abstract base classes.
The keyword 'virtual' makes virtual functions implemented. It enables dynamic binding, so the
newest version of the functions is executed at runtime. It helps us to design codes intuitively.
When it comes to the difference between an abstract base class and a concrete class, a concrete
one is a regular class that can be instantiated to create objects while the counterpart cannot
be instantiated and serves as an interface for other classes.
In Workshop 8, I completed a tutorial explaining some concepts related to inheritance,
polymorphism, and abstraction. With those concepts, I got to a milestone where I can design 
reusable code and create hierarchies of organized classes with interfaces. 